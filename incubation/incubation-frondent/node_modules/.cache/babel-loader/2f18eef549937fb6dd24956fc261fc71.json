{"ast":null,"code":"var _jsxFileName = \"/home/mufli/Desktop/Web Design/react/incubation/incubation/incubation-frondent/src/Context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const Tokens = localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null;\n  const [user, setUser] = useState(localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  const [authTokens, setAuthTokens] = useState(Tokens);\n  let navigate = useNavigate();\n\n  let userSignup = async e => {\n    e.preventDefault();\n    console.log('soraaaaaaaaaa');\n    let response = await fetch('http://127.0.0.1:8000/api/users/register/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'password': e.target.password.value,\n        'name': e.target.name.value,\n        'email': e.target.email.value\n      })\n    });\n    console.log(\"Form submitted successfully\");\n    let data = await response.json();\n\n    if (response.status === 200) {\n      alert('Account created successfully');\n      navigate('/');\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n\n  let loginUser = async (username, password) => {\n    let response = await fetch('http://127.0.0.1:8000/api/users/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': username,\n        'password': password\n      })\n    });\n    console.log(\"Form submitted successfully\");\n    let data = await response.json();\n    console.log(data);\n    console.log(response);\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      console.log(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      localStorage.setItem('user', JSON.stringify(jwt_decode(data.access)));\n      console.log(\"Login Page Saved User : \" + localStorage.getItem('user').username);\n      data.isAdmin ? navigate('/admin') : navigate('/logout');\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n\n  let userLogout = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    localStorage.removeItem('user');\n    navigate('/');\n  };\n\n  let contextData = {\n    loginUser: loginUser,\n    user: user,\n    userLogout: userLogout,\n    userSignup: userSignup,\n    authTokens: authTokens\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"HdseLK4pukGPQXzmVsKnjkM8ZO4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","createContext","useEffect","useNavigate","jwt_decode","AuthContext","AuthProvider","children","Tokens","localStorage","getItem","JSON","parse","user","setUser","authTokens","setAuthTokens","navigate","userSignup","e","preventDefault","console","log","response","fetch","method","headers","body","stringify","target","password","value","name","email","data","json","status","alert","loginUser","username","access","setItem","isAdmin","userLogout","removeItem","contextData"],"sources":["/home/mufli/Desktop/Web Design/react/incubation/incubation/incubation-frondent/src/Context/AuthContext.js"],"sourcesContent":["import { useState, createContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\nconst AuthContext = createContext();\r\nexport default AuthContext\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\r\n  const Tokens = localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')):null\r\n\r\n  const [user, setUser] = useState(localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')):null)\r\n  const [authTokens, setAuthTokens] = useState(Tokens)\r\n\r\n  let navigate = useNavigate()\r\n\r\n\r\n\r\n  let userSignup = async(e) => {\r\n    e.preventDefault()\r\n    console.log('soraaaaaaaaaa')\r\n    let response = await fetch('http://127.0.0.1:8000/api/users/register/',\r\n\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({'password':e.target.password.value,'name':e.target.name.value,'email':e.target.email.value})\r\n    }\r\n    )\r\n    console.log(\"Form submitted successfully\");\r\n    let data = await response.json();\r\n   \r\n    if(response.status === 200){\r\n        alert ('Account created successfully')\r\n        navigate('/' )\r\n    }\r\n    else{\r\n      alert(\"Invalid credentials\")\r\n    }\r\n\r\n  }\r\n\r\n  let loginUser = async(username,password) => {\r\n    let response = await fetch('http://127.0.0.1:8000/api/users/login/',\r\n\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({'username':username, 'password':password})\r\n    }\r\n    )\r\n    console.log(\"Form submitted successfully\");\r\n    let data = await response.json();\r\n    console.log(data);\r\n    console.log(response);\r\n    if(response.status === 200){\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access))\r\n      console.log(jwt_decode(data.access));\r\n      localStorage.setItem('authTokens',JSON.stringify(data))\r\n      localStorage.setItem('user',JSON.stringify(jwt_decode(data.access)))\r\n      \r\n      console.log(\"Login Page Saved User : \"+localStorage.getItem('user').username);\r\n      data.isAdmin? navigate('/admin'):\r\n      navigate( '/logout' )\r\n      \r\n  \r\n    }\r\n    else{\r\n      alert(\"Invalid credentials\")\r\n    }\r\n\r\n  }\r\n\r\nlet userLogout = () => {\r\n    setAuthTokens(null);\r\n    setUser(null)\r\n    localStorage.removeItem('authTokens')\r\n    localStorage.removeItem('user')\r\n    navigate( '/' )   \r\n}\r\n\r\n\r\n\r\n  let contextData = { \r\n    loginUser: loginUser,\r\n    user:user,\r\n    userLogout: userLogout,\r\n    userSignup: userSignup,\r\n    authTokens: authTokens,\r\n\r\n  }\r\n  return (\r\n    <AuthContext.Provider value={contextData} >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAGA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AACA,eAAeI,WAAf;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAE5C,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAqCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAArC,GAAoF,IAAnG;EAEA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACS,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAqCN,UAAU,CAACK,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAD,CAA/C,GAAoF,IAArF,CAAhC;EACA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAACQ,MAAD,CAA5C;EAEA,IAAIS,QAAQ,GAAGd,WAAW,EAA1B;;EAIA,IAAIe,UAAU,GAAG,MAAMC,CAAN,IAAY;IAC3BA,CAAC,CAACC,cAAF;IACAC,OAAO,CAACC,GAAR,CAAY,eAAZ;IACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAAD,EAE1B;MACEC,MAAM,EAAE,MADV;MAEEC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFX;MAKEC,IAAI,EAAEhB,IAAI,CAACiB,SAAL,CAAe;QAAC,YAAWT,CAAC,CAACU,MAAF,CAASC,QAAT,CAAkBC,KAA9B;QAAoC,QAAOZ,CAAC,CAACU,MAAF,CAASG,IAAT,CAAcD,KAAzD;QAA+D,SAAQZ,CAAC,CAACU,MAAF,CAASI,KAAT,CAAeF;MAAtF,CAAf;IALR,CAF0B,CAA1B;IAUAV,OAAO,CAACC,GAAR,CAAY,6BAAZ;IACA,IAAIY,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAjB;;IAEA,IAAGZ,QAAQ,CAACa,MAAT,KAAoB,GAAvB,EAA2B;MACvBC,KAAK,CAAE,8BAAF,CAAL;MACApB,QAAQ,CAAC,GAAD,CAAR;IACH,CAHD,MAII;MACFoB,KAAK,CAAC,qBAAD,CAAL;IACD;EAEF,CAxBD;;EA0BA,IAAIC,SAAS,GAAG,OAAMC,QAAN,EAAeT,QAAf,KAA4B;IAC1C,IAAIP,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAE1B;MACEC,MAAM,EAAE,MADV;MAEEC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFX;MAKEC,IAAI,EAAEhB,IAAI,CAACiB,SAAL,CAAe;QAAC,YAAWW,QAAZ;QAAsB,YAAWT;MAAjC,CAAf;IALR,CAF0B,CAA1B;IAUAT,OAAO,CAACC,GAAR,CAAY,6BAAZ;IACA,IAAIY,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAjB;IACAd,OAAO,CAACC,GAAR,CAAYY,IAAZ;IACAb,OAAO,CAACC,GAAR,CAAYC,QAAZ;;IACA,IAAGA,QAAQ,CAACa,MAAT,KAAoB,GAAvB,EAA2B;MACzBpB,aAAa,CAACkB,IAAD,CAAb;MACApB,OAAO,CAACV,UAAU,CAAC8B,IAAI,CAACM,MAAN,CAAX,CAAP;MACAnB,OAAO,CAACC,GAAR,CAAYlB,UAAU,CAAC8B,IAAI,CAACM,MAAN,CAAtB;MACA/B,YAAY,CAACgC,OAAb,CAAqB,YAArB,EAAkC9B,IAAI,CAACiB,SAAL,CAAeM,IAAf,CAAlC;MACAzB,YAAY,CAACgC,OAAb,CAAqB,MAArB,EAA4B9B,IAAI,CAACiB,SAAL,CAAexB,UAAU,CAAC8B,IAAI,CAACM,MAAN,CAAzB,CAA5B;MAEAnB,OAAO,CAACC,GAAR,CAAY,6BAA2Bb,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B6B,QAApE;MACAL,IAAI,CAACQ,OAAL,GAAczB,QAAQ,CAAC,QAAD,CAAtB,GACAA,QAAQ,CAAE,SAAF,CADR;IAID,CAZD,MAaI;MACFoB,KAAK,CAAC,qBAAD,CAAL;IACD;EAEF,CAhCD;;EAkCF,IAAIM,UAAU,GAAG,MAAM;IACnB3B,aAAa,CAAC,IAAD,CAAb;IACAF,OAAO,CAAC,IAAD,CAAP;IACAL,YAAY,CAACmC,UAAb,CAAwB,YAAxB;IACAnC,YAAY,CAACmC,UAAb,CAAwB,MAAxB;IACA3B,QAAQ,CAAE,GAAF,CAAR;EACH,CAND;;EAUE,IAAI4B,WAAW,GAAG;IAChBP,SAAS,EAAEA,SADK;IAEhBzB,IAAI,EAACA,IAFW;IAGhB8B,UAAU,EAAEA,UAHI;IAIhBzB,UAAU,EAAEA,UAJI;IAKhBH,UAAU,EAAEA;EALI,CAAlB;EAQA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE8B,WAA7B;IAAA,UACGtC;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA9FM;;GAAMD,Y;UAOIH,W;;;KAPJG,Y"},"metadata":{},"sourceType":"module"}